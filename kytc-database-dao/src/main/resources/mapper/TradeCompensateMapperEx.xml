<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kytc.database.dao.mapper.TradeCompensateMapperEx">
    <sql id="queryCondition">
        <where>
            <if test="serviceName != null ">
                service_name = #{serviceName,jdbcType=VARCHAR}
            </if>
            <if test="business != null ">
                business = #{business,jdbcType=VARCHAR}
            </if>
            <if test="businessId != null ">
                business_id = #{businessId,jdbcType=VARCHAR}
            </if>
            <if test="request != null ">
                request = #{request,jdbcType=VARCHAR}
            </if>
            <if test="url != null ">
                url = #{url,jdbcType=VARCHAR}
            </if>
            <if test="method != null ">
                method = #{method,jdbcType=VARCHAR}
            </if>
            <if test="currentCount != null ">
                current_count = #{currentCount,jdbcType=TINYINT}
            </if>
            <if test="maxRetryCount != null ">
                max_retry_count = #{maxRetryCount,jdbcType=TINYINT}
            </if>
            <if test="retryInterval != null ">
                retry_interval = #{retryInterval,jdbcType=TINYINT}
            </if>
            <if test="successCode != null ">
                success_code = #{successCode,jdbcType=VARCHAR}
            </if>
            <if test="needRetry != null ">
                need_retry = #{needRetry,jdbcType=VARCHAR}
            </if>
            <if test="remark != null ">
                remark = #{remark,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>
    <select id="listByCondition" resultMap="com.kytc.database.dao.mapper.TradeCompensateMapper.BaseResultMap">
        select
        <include refid="com.kytc.database.dao.mapper.TradeCompensateMapper.Base_Column_List"></include>
        from t_trade_compensate
        <include refid="queryCondition"></include>
        order by updated_at desc
        limit #{start},#{limit}
    </select>
    <select id="countByCondition" resultType="Long">
        select
        count(1)
        from t_trade_compensate
        <include refid="queryCondition"></include>
    </select>
</mapper>